<!DOCTYPE html><html><head><meta charset="UTF-8" /><title>slurmParsing.py Â· scitas-examples</title><meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" /><link rel="mask-icon" color="#3D4B67" href="https://c4scdn.ch/res/phabricator/e132a80f/rsrc/favicons/mask-icon.svg" /><link rel="apple-touch-icon" sizes="76x76" href="https://c4scdn.ch/file/data/f7jnlntzroqgumuj7kw2/PHID-FILE-7zmuznub7shbothht3cy/favicon" /><link rel="apple-touch-icon" sizes="120x120" href="https://c4scdn.ch/file/data/kr6ul33ztdfxghi2o75v/PHID-FILE-omvn4jbscvtnlh4yzpbl/favicon" /><link rel="apple-touch-icon" sizes="152x152" href="https://c4scdn.ch/file/data/at3izi3jmjsipe5vl3zd/PHID-FILE-l7jlremy4kfyolxo2sao/favicon" /><link rel="icon" id="favicon" href="https://c4scdn.ch/file/data/qvirvelntnwv3plpvtjk/PHID-FILE-jcmvd7drhsa3szhio6ig/favicon" /><meta name="referrer" content="no-referrer" /><link rel="stylesheet" type="text/css" href="https://c4scdn.ch/res/defaultX/phabricator/ee6f20ec/rsrc/css/application/diffusion/diffusion-repository.css" /><link rel="stylesheet" type="text/css" href="https://c4scdn.ch/res/defaultX/phabricator/7e14b04a/core.pkg.css" /><link rel="stylesheet" type="text/css" href="https://c4scdn.ch/res/defaultX/phabricator/2ab25dfa/rsrc/css/layout/phabricator-source-code-view.css" /><link rel="stylesheet" type="text/css" href="https://c4scdn.ch/res/defaultX/phabricator/a2d17c7d/diffusion.pkg.css" /><link rel="stylesheet" type="text/css" href="https://c4scdn.ch/res/defaultX/phabricator/45727264/rsrc/css/application/diffusion/diffusion.css" /><link rel="stylesheet" type="text/css" href="https://c4scdn.ch/res/defaultX/phabricator/75227a4d/rsrc/css/phui/phui-left-right.css" /><link rel="stylesheet" type="text/css" href="https://c4scdn.ch/res/defaultX/phabricator/e68cf1fa/conpherence.pkg.css" /><script type="text/javascript" src="https://c4scdn.ch/res/defaultX/phabricator/8d83d2a1/rsrc/externals/javelin/core/init.js"></script></head><body class="device-desktop platform-windows phui-theme-dark"><div class="main-page-frame" id="main-page-frame"><div id="phabricator-standard-page" class="phabricator-standard-page"><div class="phabricator-main-menu phabricator-main-menu-background" id="UQ0_2"><a class="phabricator-main-menu-search-button phabricator-expand-application-menu" data-sigil="jx-toggle-class" data-meta="0_16"><span class="phabricator-menu-button-icon phui-icon-view phui-font-fa fa-search" id="UQ0_3"></span></a><a class="phabricator-main-menu-brand" href="/"><span class="aural-only">Home</span><span class="phabricator-main-menu-eye" style=""></span><span class="phabricator-wordmark">c4science</span></a><ul class="phui-list-view phabricator-search-menu"><li class="phui-list-item-view phui-list-item-type-link phabricator-main-menu-search"><div class=""><form action="/search/" method="POST"><input type="hidden" name="__csrf__" value="B@hhzis7uz8e3110b7c71473d8" /><input type="hidden" name="__form__" value="1" /><div class="phabricator-main-menu-search-container"><input type="text" name="query" id="UQ0_4" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" /><button id="UQ0_6" class="phui-icon-view phui-font-fa fa-search"><span class="aural-only">Search</span></button><button class="button dropdown has-icon phui-button-default phabricator-main-menu-search-dropdown" id="UQ0_7" data-sigil="global-search-dropdown" data-meta="0_17"><span class="aural-only">Configure Global Search</span><span class="visual-only phui-icon-view phui-font-fa fa-globe" data-sigil="global-search-dropdown-icon" data-meta="0_18" aria-hidden="true"></span><span class="caret"></span></button><input type="hidden" name="search:scope" value="all" data-sigil="global-search-dropdown-input" /><input type="hidden" id="UQ0_8" name="search:application" value="PhabricatorDiffusionApplication" data-sigil="global-search-dropdown-app" /><input type="hidden" name="search:primary" value="true" /><div id="UQ0_5" class="phabricator-main-menu-search-target"></div></div></form></div></li></ul><a class=" phabricator-core-login-button" href="/auth/start/?next=%2Fsource%2Fscitas-examples%2Fbrowse%2Fmaster%2FModules%2FAnsys%2FRSM%2FslurmParsing.py" role="button"><div class="phui-button-text">Log In</div></a></div><div id="phabricator-standard-page-body" class="phabricator-standard-page-body"><div class="phui-crumbs-view phui-crumbs-border"><a href="/diffusion/" class="phui-crumb-view phui-crumb-has-icon"><span class="visual-only phui-icon-view phui-font-fa fa-code" data-meta="0_19" aria-hidden="true"></span><span class="phui-crumb-name"> Diffusion</span> </a><span class="visual-only phui-icon-view phui-font-fa fa-angle-right phui-crumb-divider phui-crumb-view" data-meta="0_20" aria-hidden="true"></span><a href="/source/scitas-examples/repository/master/" class="phui-crumb-view"><span class="phui-crumb-name"> SCITAS examples on how to run on the clusters (master)</span> </a><span class="visual-only phui-icon-view phui-font-fa fa-angle-right phui-crumb-divider phui-crumb-view" data-meta="0_21" aria-hidden="true"></span><span class="phui-crumb-view phabricator-last-crumb"><span class="phui-crumb-name"> Browse</span> </span></div><div class="phui-two-column-view phui-side-column-right with-tabs "><div class="phui-two-column-container"><div class="phui-two-column-header"><div class="phui-header-shell diffusion-browse-header"><h1 class="phui-header-view"><div class="phui-header-row"><div class="phui-header-col2"><span class="phui-header-header"><span class="visual-only phui-icon-view phui-font-fa fa-file-code-o phui-header-icon" data-meta="0_10" aria-hidden="true"></span><a href="/source/scitas-examples/browse/master/">scitas-examples</a><span class="phui-header-divider">/</span><a href="/source/scitas-examples/browse/master/Modules/">Modules</a><span class="phui-header-divider">/</span><a href="/source/scitas-examples/browse/master/Modules/Ansys/">Ansys</a><span class="phui-header-divider">/</span><a href="/source/scitas-examples/browse/master/Modules/Ansys/RSM/">RSM</a><span class="phui-header-divider">/</span>slurmParsing.py</span><div class="phui-header-subheader"><span class="phui-tag-view phui-tag-type-shade phui-tag-indigo phui-tag-shade phui-tag-border-none "><span class="phui-tag-core "><a href="/rSCEXAMPLESbc49ac60f97ba6e468bb34e8f608350939fa6074">bc49ac60f97b</a></span></span><span class="phui-tag-view phui-tag-type-outline phui-tag-indigo phui-tag-border-none diffusion-header-branch-tag"><span class="phui-tag-core ">master</span></span></div></div><div class="phui-header-col3"><ul class="phui-header-action-list"><li class="phui-header-action-item"><div class="diffusion-search-form-view"><form method="GET" action="/source/scitas-examples/browse/master/Modules/Ansys/RSM/slurmParsing.py" class="diffusion-search-form" id="diffusion-search-form" data-sigil="diffusion-search-form"><input type="text" id="diffusion-search-input" name="grep" class="diffusion-search-input" placeholder="Pattern Search" data-sigil="diffusion-search-input" /></form></div></li></ul></div></div></h1></div></div><div class="phui-two-column-tabs"><ul class="phui-list-view phui-list-tabbar "><li class="phui-list-item-view phui-list-item-type-link phui-list-item-has-icon phui-list-item-selected "><a href="/source/scitas-examples/repository/master/" class="phui-list-item-href"><span class="visual-only phui-icon-view phui-font-fa fa-code phui-list-item-icon" data-meta="0_11" aria-hidden="true"></span><span class="phui-list-item-name">Code</span></a></li><li class="phui-list-item-view phui-list-item-type-link phui-list-item-has-icon "><a href="/source/scitas-examples/branches/master/Modules/Ansys/RSM/slurmParsing.py" class="phui-list-item-href"><span class="visual-only phui-icon-view phui-font-fa fa-code-fork phui-list-item-icon" data-meta="0_12" aria-hidden="true"></span><span class="phui-list-item-name">Branches</span></a></li><li class="phui-list-item-view phui-list-item-type-link phui-list-item-has-icon "><a href="/source/scitas-examples/tags/master/Modules/Ansys/RSM/slurmParsing.py" class="phui-list-item-href"><span class="visual-only phui-icon-view phui-font-fa fa-tags phui-list-item-icon" data-meta="0_13" aria-hidden="true"></span><span class="phui-list-item-name">Tags</span></a></li><li class="phui-list-item-view phui-list-item-type-link phui-list-item-has-icon "><a href="/source/scitas-examples/history/master/Modules/Ansys/RSM/slurmParsing.py" class="phui-list-item-href"><span class="visual-only phui-icon-view phui-font-fa fa-history phui-list-item-icon" data-meta="0_14" aria-hidden="true"></span><span class="phui-list-item-name">History</span></a></li><li class="phui-list-item-view phui-list-item-type-link phui-list-item-has-icon "><a href="/source/scitas-examples/graph/master/Modules/Ansys/RSM/slurmParsing.py" class="phui-list-item-href"><span class="visual-only phui-icon-view phui-font-fa fa-code-fork phui-list-item-icon" data-meta="0_15" aria-hidden="true"></span><span class="phui-list-item-name">Graph</span></a></li></ul></div><div class="phui-two-column-content"><div class="phui-two-column-row grouped"><div class="phui-side-column"></div><div class="phui-main-column"></div></div></div><div class="phui-two-column-content phui-two-column-footer"><div class="phui-left-right-view diffusion-action-bar full-mobile-buttons"><div class="phui-lr-container"><div class="phui-left-view"><a class="button button-grey has-icon has-text phui-button-default " href="/source/scitas-examples/change/master/Modules/Ansys/RSM/slurmParsing.py" role="button"><span class="visual-only phui-icon-view phui-font-fa fa-backward" data-meta="0_5" aria-hidden="true"></span><div class="phui-button-text">Last Change</div></a></div><div class="phui-right-view"><a class="button button-grey has-icon has-text phui-button-default " href="/source/scitas-examples/browse/master/Modules/Ansys/RSM/slurmParsing.py?view=raw" role="button"><span class="visual-only phui-icon-view phui-font-fa fa-file-text" data-meta="0_6" aria-hidden="true"></span><div class="phui-button-text">Raw File</div></a></div></div></div><div class="phui-box phui-box-border phui-object-box mlt mll mlr phui-box-blue-property "><div class="phui-header-shell "><h1 class="phui-header-view"><div class="phui-header-row"><div class="phui-header-col2"><span class="phui-header-header"><span class="visual-only phui-icon-view phui-font-fa fa-code phui-header-icon" data-meta="0_9" aria-hidden="true"></span>slurmParsing.py</span></div><div class="phui-header-col3"><div class="phui-header-action-links"><a class="button button-grey dropdown has-icon has-text phui-button-default msl phui-header-action-link" role="button" id="UQ0_1" data-sigil="document-engine-view-dropdown" data-meta="0_7"><span class="visual-only phui-icon-view phui-font-fa fa-file-image-o" data-meta="0_8" aria-hidden="true"></span><div class="phui-button-text">View Options</div><span class="caret"></span></a></div></div></div></h1></div><div id="UQ0_0"><div class="document-engine-text"><div class="phabricator-source-code-container"><table class="phabricator-source-code-view remarkup-code PhabricatorMonospaced" data-sigil="phabricator-source has-symbols" data-meta="0_4"><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="1"></th><th class="phabricator-source-line"><a data-n="1"></a></th><td class="phabricator-source-code"><span class="sd">&quot;&quot;&quot;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="2"></th><th class="phabricator-source-line"><a data-n="2"></a></th><td class="phabricator-source-code"><span class="sd">Copyright (C) 2014 ANSYS, Inc. and its subsidiaries.  All Rights Reserved.</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="3"></th><th class="phabricator-source-line"><a data-n="3"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="4"></th><th class="phabricator-source-line"><a data-n="4"></a></th><td class="phabricator-source-code"><span class="sd">$LastChangedDate$</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="5"></th><th class="phabricator-source-line"><a data-n="5"></a></th><td class="phabricator-source-code"><span class="sd">$LastChangedRevision$</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="6"></th><th class="phabricator-source-line"><a data-n="6"></a></th><td class="phabricator-source-code"><span class="sd">$LastChangedBy$</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="7"></th><th class="phabricator-source-line"><a data-n="7"></a></th><td class="phabricator-source-code"><span class="sd">&quot;&quot;&quot;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="8"></th><th class="phabricator-source-line"><a data-n="8"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="9"></th><th class="phabricator-source-line"><a data-n="9"></a></th><td class="phabricator-source-code"><span class="kn">import</span> <span class="nn">sys</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="10"></th><th class="phabricator-source-line"><a data-n="10"></a></th><td class="phabricator-source-code"><span class="kn">import</span> <span class="nn">os</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="11"></th><th class="phabricator-source-line"><a data-n="11"></a></th><td class="phabricator-source-code"><span class="kn">import</span> <span class="nn">generalUtilities</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="12"></th><th class="phabricator-source-line"><a data-n="12"></a></th><td class="phabricator-source-code"><span class="kn">from</span> <span class="nn">applicationConfiguration</span> <span class="kn">import</span> <span class="n">IsRunningIronPython</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="13"></th><th class="phabricator-source-line"><a data-n="13"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="14"></th><th class="phabricator-source-line"><a data-n="14"></a></th><td class="phabricator-source-code"><span class="kn">from</span> <span class="nn">generalUtilities</span> <span class="kn">import</span> <span class="n">SUBMIT_OUTPUT_VARIABLE_NAME</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="15"></th><th class="phabricator-source-line"><a data-n="15"></a></th><td class="phabricator-source-code"><span class="kn">from</span> <span class="nn">generalUtilities</span> <span class="kn">import</span> <span class="n">STATUS_OUTPUT_VARIABLE_NAME</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="16"></th><th class="phabricator-source-line"><a data-n="16"></a></th><td class="phabricator-source-code"><span class="kn">from</span> <span class="nn">generalUtilities</span> <span class="kn">import</span> <span class="n">QUEUES_OUTPUT_VARIABLE_NAME</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="17"></th><th class="phabricator-source-line"><a data-n="17"></a></th><td class="phabricator-source-code"><span class="kn">from</span> <span class="nn">generalUtilities</span> <span class="kn">import</span> <span class="n">GENERIC_OUTPUT_VARIABLE_NAME</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="18"></th><th class="phabricator-source-line"><a data-n="18"></a></th><td class="phabricator-source-code"><span class="kn">from</span> <span class="nn">generalUtilities</span> <span class="kn">import</span> <span class="n">JOBID_INPUT_VARIABLE_NAME</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="19"></th><th class="phabricator-source-line"><a data-n="19"></a></th><td class="phabricator-source-code"><span class="kn">from</span> <span class="nn">generalUtilities</span> <span class="kn">import</span> <span class="n">QUEUES_INPUT_VARIABLE_NAME</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="20"></th><th class="phabricator-source-line"><a data-n="20"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="21"></th><th class="phabricator-source-line"><a data-n="21"></a></th><td class="phabricator-source-code"><span class="k">def</span> <span class="nf" data-symbol-name="main">main</span><span class="p">(</span><span class="n">args</span><span class="p">,</span> <span class="n">environment</span><span class="p">,</span> <span class="n">enablePrints</span> <span class="o">=</span> <span class="bp">False</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="22"></th><th class="phabricator-source-line"><a data-n="22"></a></th><td class="phabricator-source-code">    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="23"></th><th class="phabricator-source-line"><a data-n="23"></a></th><td class="phabricator-source-code">        <span class="k">raise</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">NonZeroExitCodeException</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;Expected a script argument as the type of method to parse: I.E. &#039;-submit&#039; or &#039;-status&#039;&quot;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="24"></th><th class="phabricator-source-line"><a data-n="24"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="25"></th><th class="phabricator-source-line"><a data-n="25"></a></th><td class="phabricator-source-code">    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="26"></th><th class="phabricator-source-line"><a data-n="26"></a></th><td class="phabricator-source-code">        <span class="k">raise</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">NonZeroExitCodeException</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;Too many arguments passed to script.  Expected 1 or 2, but was &quot;</span> <span class="o">+</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">))</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="27"></th><th class="phabricator-source-line"><a data-n="27"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="28"></th><th class="phabricator-source-line"><a data-n="28"></a></th><td class="phabricator-source-code">    <span class="n">commandToParse</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="29"></th><th class="phabricator-source-line"><a data-n="29"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="30"></th><th class="phabricator-source-line"><a data-n="30"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">==</span> <span class="mi">2</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="31"></th><th class="phabricator-source-line"><a data-n="31"></a></th><td class="phabricator-source-code">        <span class="n">parseMarker</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="32"></th><th class="phabricator-source-line"><a data-n="32"></a></th><td class="phabricator-source-code">    <span class="k">else</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="33"></th><th class="phabricator-source-line"><a data-n="33"></a></th><td class="phabricator-source-code">        <span class="n">parseMarker</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="34"></th><th class="phabricator-source-line"><a data-n="34"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="35"></th><th class="phabricator-source-line"><a data-n="35"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="n">commandToParse</span> <span class="o">==</span> <span class="s">&quot;-SUBMIT&quot;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="36"></th><th class="phabricator-source-line"><a data-n="36"></a></th><td class="phabricator-source-code">        <span class="n">_parseSubmitCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarker</span><span class="p">,</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">defineRsmVariable</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="37"></th><th class="phabricator-source-line"><a data-n="37"></a></th><td class="phabricator-source-code">    <span class="k">elif</span><span class="p">(</span><span class="n">commandToParse</span> <span class="o">==</span> <span class="s">&quot;-STATUS&quot;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="38"></th><th class="phabricator-source-line"><a data-n="38"></a></th><td class="phabricator-source-code">        <span class="n">_parseStatusCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarker</span><span class="p">,</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">defineRsmVariable</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="39"></th><th class="phabricator-source-line"><a data-n="39"></a></th><td class="phabricator-source-code">    <span class="k">elif</span><span class="p">(</span><span class="n">commandToParse</span> <span class="o">==</span> <span class="s">&quot;-QUEUES&quot;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="40"></th><th class="phabricator-source-line"><a data-n="40"></a></th><td class="phabricator-source-code">        <span class="n">_parseQueuesCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarker</span><span class="p">,</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">defineRsmVariable</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="41"></th><th class="phabricator-source-line"><a data-n="41"></a></th><td class="phabricator-source-code">    <span class="k">elif</span> <span class="n">commandToParse</span> <span class="o">==</span> <span class="s">&quot;-GENERIC&quot;</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="42"></th><th class="phabricator-source-line"><a data-n="42"></a></th><td class="phabricator-source-code">        <span class="n">generalUtilities</span><span class="o">.</span><span class="n">ParseGenericCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarker</span><span class="p">,</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">defineRsmVariable</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="43"></th><th class="phabricator-source-line"><a data-n="43"></a></th><td class="phabricator-source-code">    <span class="k">elif</span> <span class="n">commandToParse</span> <span class="o">==</span> <span class="s">&quot;-ALLSTATUS&quot;</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="44"></th><th class="phabricator-source-line"><a data-n="44"></a></th><td class="phabricator-source-code">        <span class="n">_parseAllStatusCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarker</span><span class="p">,</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">defineRsmVariable</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="45"></th><th class="phabricator-source-line"><a data-n="45"></a></th><td class="phabricator-source-code">    <span class="k">elif</span> <span class="n">commandToParse</span> <span class="o">==</span> <span class="s">&quot;-ALLQUEUES&quot;</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="46"></th><th class="phabricator-source-line"><a data-n="46"></a></th><td class="phabricator-source-code">        <span class="n">_parseAllQueuesCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarker</span><span class="p">,</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">defineRsmVariable</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="47"></th><th class="phabricator-source-line"><a data-n="47"></a></th><td class="phabricator-source-code">    <span class="k">elif</span> <span class="n">commandToParse</span> <span class="o">==</span> <span class="s">&quot;-LOAD&quot;</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="48"></th><th class="phabricator-source-line"><a data-n="48"></a></th><td class="phabricator-source-code">        <span class="n">_parseLoadCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarker</span><span class="p">,</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">defineRsmVariable</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="49"></th><th class="phabricator-source-line"><a data-n="49"></a></th><td class="phabricator-source-code">    <span class="k">else</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="50"></th><th class="phabricator-source-line"><a data-n="50"></a></th><td class="phabricator-source-code">        <span class="k">raise</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">NonZeroExitCodeException</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;&#039;&quot;</span> <span class="o">+</span> <span class="n">args</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="s">&quot;&#039; could not be parsed as a valid method to parse.&quot;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="51"></th><th class="phabricator-source-line"><a data-n="51"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="52"></th><th class="phabricator-source-line"><a data-n="52"></a></th><td class="phabricator-source-code">    <span class="k">return</span> <span class="mi">0</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="53"></th><th class="phabricator-source-line"><a data-n="53"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="54"></th><th class="phabricator-source-line"><a data-n="54"></a></th><td class="phabricator-source-code"><span class="k">def</span> <span class="nf" data-symbol-name="_parseSubmitCommand">_parseSubmitCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">,</span> <span class="n">defineRsmVariableFunc</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="55"></th><th class="phabricator-source-line"><a data-n="55"></a></th><td class="phabricator-source-code">    <span class="c"># Get the Standard Output</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="56"></th><th class="phabricator-source-line"><a data-n="56"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">GetStdOutVariable</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">disallowBlankStdOut</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="57"></th><th class="phabricator-source-line"><a data-n="57"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="58"></th><th class="phabricator-source-line"><a data-n="58"></a></th><td class="phabricator-source-code">    <span class="c"># Check to see if the output has the parse marker, if it does, then split the string and set the stdout equal to the half after the Marker String</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="59"></th><th class="phabricator-source-line"><a data-n="59"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">ReduceStdOutBasedOnParseMarker</span><span class="p">(</span><span class="n">stdOut</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="60"></th><th class="phabricator-source-line"><a data-n="60"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="61"></th><th class="phabricator-source-line"><a data-n="61"></a></th><td class="phabricator-source-code">    <span class="c"># StdoutList is comprised of the lines of stdout from after the parse Marker</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="62"></th><th class="phabricator-source-line"><a data-n="62"></a></th><td class="phabricator-source-code">    <span class="n">stdOutList</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">CreateListByNewlineAndRemoveBlankLines</span><span class="p">(</span><span class="n">stdOut</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="63"></th><th class="phabricator-source-line"><a data-n="63"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="64"></th><th class="phabricator-source-line"><a data-n="64"></a></th><td class="phabricator-source-code">    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">stdOutList</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="65"></th><th class="phabricator-source-line"><a data-n="65"></a></th><td class="phabricator-source-code">        <span class="c"># sbatch: indicates that sbatch has some error...</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="66"></th><th class="phabricator-source-line"><a data-n="66"></a></th><td class="phabricator-source-code">        <span class="k">if</span> <span class="ow">not</span> <span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">lstrip</span><span class="p">()</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#039;Submitted&#039;</span><span class="p">)):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="67"></th><th class="phabricator-source-line"><a data-n="67"></a></th><td class="phabricator-source-code">            <span class="n">FailedToParseStdOut</span><span class="p">(</span><span class="s">&quot;Submit&quot;</span><span class="p">,</span> <span class="n">stdOut</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="68"></th><th class="phabricator-source-line"><a data-n="68"></a></th><td class="phabricator-source-code">        
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="69"></th><th class="phabricator-source-line"><a data-n="69"></a></th><td class="phabricator-source-code">        <span class="c"># The fourth item is *exactly* the jobid</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="70"></th><th class="phabricator-source-line"><a data-n="70"></a></th><td class="phabricator-source-code">        <span class="n">result</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">lstrip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()[</span><span class="mi">3</span><span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="71"></th><th class="phabricator-source-line"><a data-n="71"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">SUBMIT_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="n">result</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="72"></th><th class="phabricator-source-line"><a data-n="72"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="73"></th><th class="phabricator-source-line"><a data-n="73"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="74"></th><th class="phabricator-source-line"><a data-n="74"></a></th><td class="phabricator-source-code">    <span class="n">generalUtilities</span><span class="o">.</span><span class="n">FailedToParseStdOut</span><span class="p">(</span><span class="s">&quot;Submit&quot;</span><span class="p">,</span> <span class="n">stdOut</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="75"></th><th class="phabricator-source-line"><a data-n="75"></a></th><td class="phabricator-source-code">    <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="76"></th><th class="phabricator-source-line"><a data-n="76"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="77"></th><th class="phabricator-source-line"><a data-n="77"></a></th><td class="phabricator-source-code"><span class="k">def</span> <span class="nf" data-symbol-name="_parseStatusCommand">_parseStatusCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">,</span> <span class="n">defineRsmVariableFunc</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="78"></th><th class="phabricator-source-line"><a data-n="78"></a></th><td class="phabricator-source-code">    <span class="c"># Get the Standard Output and Error</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="79"></th><th class="phabricator-source-line"><a data-n="79"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">GetStdOutVariable</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">disallowBlankStdOut</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="80"></th><th class="phabricator-source-line"><a data-n="80"></a></th><td class="phabricator-source-code">    <span class="n">stdErr</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">GetStdErrVariable</span><span class="p">(</span><span class="n">environment</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="81"></th><th class="phabricator-source-line"><a data-n="81"></a></th><td class="phabricator-source-code">    <span class="c"># Check to see if the output has the parse marker, if it does, then split the string and set the stdout equal to the half after the Marker String</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="82"></th><th class="phabricator-source-line"><a data-n="82"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">ReduceStdOutBasedOnParseMarker</span><span class="p">(</span><span class="n">stdOut</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="83"></th><th class="phabricator-source-line"><a data-n="83"></a></th><td class="phabricator-source-code">    <span class="c"># StdoutList is comprised of the lines of stdout from after the parse Marker</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="84"></th><th class="phabricator-source-line"><a data-n="84"></a></th><td class="phabricator-source-code">    <span class="n">stdOutList</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">CreateListByNewlineAndRemoveBlankLines</span><span class="p">(</span><span class="n">stdOut</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="85"></th><th class="phabricator-source-line"><a data-n="85"></a></th><td class="phabricator-source-code">    <span class="n">stdErrList</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">CreateListByNewlineAndRemoveBlankLines</span><span class="p">(</span><span class="n">stdErr</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="86"></th><th class="phabricator-source-line"><a data-n="86"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="87"></th><th class="phabricator-source-line"><a data-n="87"></a></th><td class="phabricator-source-code">    <span class="c"># If the output is empty, then this means the job is finished</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="88"></th><th class="phabricator-source-line"><a data-n="88"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">stdOutList</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="89"></th><th class="phabricator-source-line"><a data-n="89"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;FINISHED&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="90"></th><th class="phabricator-source-line"><a data-n="90"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="91"></th><th class="phabricator-source-line"><a data-n="91"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="92"></th><th class="phabricator-source-line"><a data-n="92"></a></th><td class="phabricator-source-code">    <span class="c"># If we get an error that we can not find the job ID anymore then we are finished.</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="93"></th><th class="phabricator-source-line"><a data-n="93"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="nb">any</span><span class="p">(</span><span class="s">&quot;Invalid job id&quot;</span> <span class="ow">in</span> <span class="n">line</span> <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">stdErrList</span><span class="p">)):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="94"></th><th class="phabricator-source-line"><a data-n="94"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;FINISHED&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="95"></th><th class="phabricator-source-line"><a data-n="95"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="96"></th><th class="phabricator-source-line"><a data-n="96"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="97"></th><th class="phabricator-source-line"><a data-n="97"></a></th><td class="phabricator-source-code">    <span class="c"># If the output isnt blank but is less than 2 lines, then there is some problem.  Should be a 1 line header and an active job line at least..</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="98"></th><th class="phabricator-source-line"><a data-n="98"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">stdOutList</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="99"></th><th class="phabricator-source-line"><a data-n="99"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;FINISHED&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="100"></th><th class="phabricator-source-line"><a data-n="100"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="101"></th><th class="phabricator-source-line"><a data-n="101"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="102"></th><th class="phabricator-source-line"><a data-n="102"></a></th><td class="phabricator-source-code">    <span class="c"># The status is wrapped by one header lines, so they are removed here.</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="103"></th><th class="phabricator-source-line"><a data-n="103"></a></th><td class="phabricator-source-code">    <span class="n">statusLine</span> <span class="o">=</span> <span class="n">stdOutList</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="104"></th><th class="phabricator-source-line"><a data-n="104"></a></th><td class="phabricator-source-code">    <span class="n">statusList</span> <span class="o">=</span> <span class="n">statusLine</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="105"></th><th class="phabricator-source-line"><a data-n="105"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">statusList</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="106"></th><th class="phabricator-source-line"><a data-n="106"></a></th><td class="phabricator-source-code">        <span class="n">status</span> <span class="o">=</span> <span class="n">statusList</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="107"></th><th class="phabricator-source-line"><a data-n="107"></a></th><td class="phabricator-source-code">    <span class="k">else</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="108"></th><th class="phabricator-source-line"><a data-n="108"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;UNKNOWN&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="109"></th><th class="phabricator-source-line"><a data-n="109"></a></th><td class="phabricator-source-code">        <span class="n">generalUtilities</span><span class="o">.</span><span class="n">FailedToParseStdOut</span><span class="p">(</span><span class="s">&quot;Status&quot;</span><span class="p">,</span> <span class="n">stdOut</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="110"></th><th class="phabricator-source-line"><a data-n="110"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="111"></th><th class="phabricator-source-line"><a data-n="111"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="112"></th><th class="phabricator-source-line"><a data-n="112"></a></th><td class="phabricator-source-code">    <span class="c"># SLURM has no &quot;Failed&quot; option that we parse?</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="113"></th><th class="phabricator-source-line"><a data-n="113"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="n">status</span> <span class="o">==</span> <span class="s">&#039;R&#039;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="114"></th><th class="phabricator-source-line"><a data-n="114"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;Running&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="115"></th><th class="phabricator-source-line"><a data-n="115"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="116"></th><th class="phabricator-source-line"><a data-n="116"></a></th><td class="phabricator-source-code">    <span class="k">elif</span><span class="p">(</span><span class="n">status</span> <span class="o">==</span> <span class="s">&#039;F&#039;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="117"></th><th class="phabricator-source-line"><a data-n="117"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;Failed&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="118"></th><th class="phabricator-source-line"><a data-n="118"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="119"></th><th class="phabricator-source-line"><a data-n="119"></a></th><td class="phabricator-source-code">    <span class="k">elif</span><span class="p">(</span><span class="n">status</span> <span class="o">==</span> <span class="s">&#039;PD&#039;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="120"></th><th class="phabricator-source-line"><a data-n="120"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;Queued&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="121"></th><th class="phabricator-source-line"><a data-n="121"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="122"></th><th class="phabricator-source-line"><a data-n="122"></a></th><td class="phabricator-source-code">    <span class="k">elif</span><span class="p">(</span><span class="n">status</span> <span class="o">==</span> <span class="s">&#039;CA&#039;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="123"></th><th class="phabricator-source-line"><a data-n="123"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;Cancelled&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="124"></th><th class="phabricator-source-line"><a data-n="124"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="125"></th><th class="phabricator-source-line"><a data-n="125"></a></th><td class="phabricator-source-code">    <span class="k">elif</span><span class="p">(</span><span class="n">status</span> <span class="o">==</span> <span class="s">&#039;CD&#039;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="126"></th><th class="phabricator-source-line"><a data-n="126"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;Finished&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="127"></th><th class="phabricator-source-line"><a data-n="127"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="128"></th><th class="phabricator-source-line"><a data-n="128"></a></th><td class="phabricator-source-code">    <span class="k">else</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="129"></th><th class="phabricator-source-line"><a data-n="129"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">STATUS_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;UNKNOWN&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="130"></th><th class="phabricator-source-line"><a data-n="130"></a></th><td class="phabricator-source-code">        <span class="n">FailedToParseStdOut</span><span class="p">(</span><span class="s">&quot;Status&quot;</span><span class="p">,</span> <span class="n">stdOut</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="131"></th><th class="phabricator-source-line"><a data-n="131"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="132"></th><th class="phabricator-source-line"><a data-n="132"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="133"></th><th class="phabricator-source-line"><a data-n="133"></a></th><td class="phabricator-source-code"><span class="k">def</span> <span class="nf" data-symbol-name="ValidateOutputFromQueuesCommand">ValidateOutputFromQueuesCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">,</span> <span class="n">defineRsmVariableFunc</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="134"></th><th class="phabricator-source-line"><a data-n="134"></a></th><td class="phabricator-source-code">    <span class="n">stdErr</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">GetStdErrVariable</span><span class="p">(</span><span class="n">environment</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="135"></th><th class="phabricator-source-line"><a data-n="135"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="ow">not</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">IsNoneOrWhitespace</span><span class="p">(</span><span class="n">stdErr</span><span class="p">)):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="136"></th><th class="phabricator-source-line"><a data-n="136"></a></th><td class="phabricator-source-code">        <span class="c"># if StdErr has some valid content then the command has failed.  We will just ignore the command and go on sucessfully</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="137"></th><th class="phabricator-source-line"><a data-n="137"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">QUEUES_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;TRUE&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="138"></th><th class="phabricator-source-line"><a data-n="138"></a></th><td class="phabricator-source-code">        <span class="k">return</span> <span class="bp">None</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="139"></th><th class="phabricator-source-line"><a data-n="139"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="140"></th><th class="phabricator-source-line"><a data-n="140"></a></th><td class="phabricator-source-code">    <span class="c"># Get the Standard Output and Error if it is blank or doesnt exist</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="141"></th><th class="phabricator-source-line"><a data-n="141"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">GetStdOutVariable</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">disallowBlankStdOut</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="142"></th><th class="phabricator-source-line"><a data-n="142"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="143"></th><th class="phabricator-source-line"><a data-n="143"></a></th><td class="phabricator-source-code">    <span class="c"># Check to see if the output has the parse marker, if it does, then split the string and set the stdout equal to the half after the Marker String</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="144"></th><th class="phabricator-source-line"><a data-n="144"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">ReduceStdOutBasedOnParseMarker</span><span class="p">(</span><span class="n">stdOut</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="145"></th><th class="phabricator-source-line"><a data-n="145"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="146"></th><th class="phabricator-source-line"><a data-n="146"></a></th><td class="phabricator-source-code">    <span class="c"># StdoutList is comprised of the lines of stdout from after the parse Marker</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="147"></th><th class="phabricator-source-line"><a data-n="147"></a></th><td class="phabricator-source-code">    <span class="n">stdOutList</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">CreateListByNewlineAndRemoveBlankLines</span><span class="p">(</span><span class="n">stdOut</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="148"></th><th class="phabricator-source-line"><a data-n="148"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="149"></th><th class="phabricator-source-line"><a data-n="149"></a></th><td class="phabricator-source-code">    <span class="c"># If the output is less than 2 lines, then there is some problem.</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="150"></th><th class="phabricator-source-line"><a data-n="150"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">stdOutList</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="151"></th><th class="phabricator-source-line"><a data-n="151"></a></th><td class="phabricator-source-code">        <span class="n">generalUtilities</span><span class="o">.</span><span class="n">FailedToParseStdOut</span><span class="p">(</span><span class="s">&quot;Queues&quot;</span><span class="p">,</span> <span class="n">stdOut</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="152"></th><th class="phabricator-source-line"><a data-n="152"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">QUEUES_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;TRUE&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="153"></th><th class="phabricator-source-line"><a data-n="153"></a></th><td class="phabricator-source-code">        <span class="k">return</span> <span class="bp">None</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="154"></th><th class="phabricator-source-line"><a data-n="154"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="155"></th><th class="phabricator-source-line"><a data-n="155"></a></th><td class="phabricator-source-code">    <span class="k">return</span> <span class="n">stdOutList</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="156"></th><th class="phabricator-source-line"><a data-n="156"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="157"></th><th class="phabricator-source-line"><a data-n="157"></a></th><td class="phabricator-source-code"><span class="k">def</span> <span class="nf" data-symbol-name="_parseAllQueuesCommand">_parseAllQueuesCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">,</span> <span class="n">defineRsmVariableFunc</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="158"></th><th class="phabricator-source-line"><a data-n="158"></a></th><td class="phabricator-source-code">    <span class="n">stdOutList</span> <span class="o">=</span> <span class="n">ValidateOutputFromQueuesCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">,</span> <span class="n">defineRsmVariableFunc</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="159"></th><th class="phabricator-source-line"><a data-n="159"></a></th><td class="phabricator-source-code">    <span class="k">if</span> <span class="n">stdOutList</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="160"></th><th class="phabricator-source-line"><a data-n="160"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="161"></th><th class="phabricator-source-line"><a data-n="161"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="162"></th><th class="phabricator-source-line"><a data-n="162"></a></th><td class="phabricator-source-code">    <span class="n">queueList</span> <span class="o">=</span> <span class="p">[]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="163"></th><th class="phabricator-source-line"><a data-n="163"></a></th><td class="phabricator-source-code">    <span class="c"># Dont look at the first line, its a header...</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="164"></th><th class="phabricator-source-line"><a data-n="164"></a></th><td class="phabricator-source-code">    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">stdOutList</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="165"></th><th class="phabricator-source-line"><a data-n="165"></a></th><td class="phabricator-source-code">        <span class="c"># We need to strip any leading spaces and then split by spaces and get the first item, it will be the queue name *only*</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="166"></th><th class="phabricator-source-line"><a data-n="166"></a></th><td class="phabricator-source-code">        <span class="n">queueList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">lstrip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()[</span><span class="mi">0</span><span class="p">])</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="167"></th><th class="phabricator-source-line"><a data-n="167"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="168"></th><th class="phabricator-source-line"><a data-n="168"></a></th><td class="phabricator-source-code">    <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">GENERIC_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">queueList</span><span class="p">))</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="169"></th><th class="phabricator-source-line"><a data-n="169"></a></th><td class="phabricator-source-code">    <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="170"></th><th class="phabricator-source-line"><a data-n="170"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="171"></th><th class="phabricator-source-line"><a data-n="171"></a></th><td class="phabricator-source-code"><span class="k">def</span> <span class="nf" data-symbol-name="_parseQueuesCommand">_parseQueuesCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">,</span> <span class="n">defineRsmVariableFunc</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="172"></th><th class="phabricator-source-line"><a data-n="172"></a></th><td class="phabricator-source-code">    <span class="n">stdOutList</span> <span class="o">=</span> <span class="n">ValidateOutputFromQueuesCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">,</span> <span class="n">defineRsmVariableFunc</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="173"></th><th class="phabricator-source-line"><a data-n="173"></a></th><td class="phabricator-source-code">    <span class="k">if</span> <span class="n">stdOutList</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="174"></th><th class="phabricator-source-line"><a data-n="174"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="175"></th><th class="phabricator-source-line"><a data-n="175"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="176"></th><th class="phabricator-source-line"><a data-n="176"></a></th><td class="phabricator-source-code">    <span class="c"># Get the name of the queue that we are using</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="177"></th><th class="phabricator-source-line"><a data-n="177"></a></th><td class="phabricator-source-code">    <span class="n">queueName</span> <span class="o">=</span> <span class="n">environment</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">QUEUES_INPUT_VARIABLE_NAME</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="178"></th><th class="phabricator-source-line"><a data-n="178"></a></th><td class="phabricator-source-code">    <span class="k">if</span><span class="p">(</span><span class="n">queueName</span> <span class="o">==</span> <span class="bp">None</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="179"></th><th class="phabricator-source-line"><a data-n="179"></a></th><td class="phabricator-source-code">        <span class="k">raise</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">NonZeroExitCodeException</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">&quot;NonExistant QUEUE Input Variable: &#039;&quot;</span> <span class="o">+</span> <span class="n">QUEUES_INPUT_VARIABLE_NAME</span> <span class="o">+</span> <span class="s">&quot;&#039;&quot;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="180"></th><th class="phabricator-source-line"><a data-n="180"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="181"></th><th class="phabricator-source-line"><a data-n="181"></a></th><td class="phabricator-source-code">    <span class="c"># Dont look at the first line, its a header...</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="182"></th><th class="phabricator-source-line"><a data-n="182"></a></th><td class="phabricator-source-code">    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">stdOutList</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="183"></th><th class="phabricator-source-line"><a data-n="183"></a></th><td class="phabricator-source-code">        <span class="c"># We need to strip any leading spaces and then split by spaces and get the first item, it will be the queue name *only*</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="184"></th><th class="phabricator-source-line"><a data-n="184"></a></th><td class="phabricator-source-code">        <span class="k">if</span><span class="p">(</span><span class="n">queueName</span> <span class="ow">in</span> <span class="n">line</span><span class="o">.</span><span class="n">lstrip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()[</span><span class="mi">0</span><span class="p">]):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="185"></th><th class="phabricator-source-line"><a data-n="185"></a></th><td class="phabricator-source-code">            <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">QUEUES_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;TRUE&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="186"></th><th class="phabricator-source-line"><a data-n="186"></a></th><td class="phabricator-source-code">            <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="187"></th><th class="phabricator-source-line"><a data-n="187"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="188"></th><th class="phabricator-source-line"><a data-n="188"></a></th><td class="phabricator-source-code">    <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">QUEUES_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="s">&#039;FALSE&#039;</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="189"></th><th class="phabricator-source-line"><a data-n="189"></a></th><td class="phabricator-source-code">    <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="190"></th><th class="phabricator-source-line"><a data-n="190"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="191"></th><th class="phabricator-source-line"><a data-n="191"></a></th><td class="phabricator-source-code"><span class="k">def</span> <span class="nf" data-symbol-name="_parseAllStatusCommand">_parseAllStatusCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">,</span> <span class="n">defineRsmVariableFunc</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="192"></th><th class="phabricator-source-line"><a data-n="192"></a></th><td class="phabricator-source-code">    <span class="c"># Get the Standard Output and Error</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="193"></th><th class="phabricator-source-line"><a data-n="193"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">GetStdOutVariable</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">disallowBlankStdOut</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="194"></th><th class="phabricator-source-line"><a data-n="194"></a></th><td class="phabricator-source-code">    <span class="c"># Check to see if the output has the parse marker, if it does, then split the string and set the stdout equal to the half after the Marker String</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="195"></th><th class="phabricator-source-line"><a data-n="195"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">ReduceStdOutBasedOnParseMarker</span><span class="p">(</span><span class="n">stdOut</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="196"></th><th class="phabricator-source-line"><a data-n="196"></a></th><td class="phabricator-source-code">    <span class="c"># StdoutList is comprised of the lines of stdout from after the parse Marker</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="197"></th><th class="phabricator-source-line"><a data-n="197"></a></th><td class="phabricator-source-code">    <span class="n">stdOutList</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">CreateListByNewlineAndRemoveBlankLines</span><span class="p">(</span><span class="n">stdOut</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="198"></th><th class="phabricator-source-line"><a data-n="198"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="199"></th><th class="phabricator-source-line"><a data-n="199"></a></th><td class="phabricator-source-code">    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">stdOutList</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="200"></th><th class="phabricator-source-line"><a data-n="200"></a></th><td class="phabricator-source-code">        <span class="n">statusDict</span> <span class="o">=</span> <span class="p">{}</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="201"></th><th class="phabricator-source-line"><a data-n="201"></a></th><td class="phabricator-source-code">        <span class="n">statusDict</span><span class="p">[</span><span class="s">&#039;-1&#039;</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#039;UNKNOWN&#039;</span><span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="202"></th><th class="phabricator-source-line"><a data-n="202"></a></th><td class="phabricator-source-code">        <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">GENERIC_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">statusDict</span><span class="p">))</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="203"></th><th class="phabricator-source-line"><a data-n="203"></a></th><td class="phabricator-source-code">        <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="204"></th><th class="phabricator-source-line"><a data-n="204"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="205"></th><th class="phabricator-source-line"><a data-n="205"></a></th><td class="phabricator-source-code">    <span class="c"># Must be some weird output that is unparsible...</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="206"></th><th class="phabricator-source-line"><a data-n="206"></a></th><td class="phabricator-source-code">    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">stdOutList</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="207"></th><th class="phabricator-source-line"><a data-n="207"></a></th><td class="phabricator-source-code">        <span class="n">generalUtilities</span><span class="o">.</span><span class="n">FailedToParseStdOut</span><span class="p">(</span><span class="s">&quot;getAllStatus&quot;</span><span class="p">,</span> <span class="n">stdOut</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="208"></th><th class="phabricator-source-line"><a data-n="208"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="209"></th><th class="phabricator-source-line"><a data-n="209"></a></th><td class="phabricator-source-code">    <span class="n">statusDict</span> <span class="o">=</span> <span class="p">{}</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="210"></th><th class="phabricator-source-line"><a data-n="210"></a></th><td class="phabricator-source-code">    <span class="n">status</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="211"></th><th class="phabricator-source-line"><a data-n="211"></a></th><td class="phabricator-source-code">    <span class="n">cores</span> <span class="o">=</span> <span class="s">&quot;-1&quot;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="212"></th><th class="phabricator-source-line"><a data-n="212"></a></th><td class="phabricator-source-code">    <span class="n">queue</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="213"></th><th class="phabricator-source-line"><a data-n="213"></a></th><td class="phabricator-source-code">    <span class="n">username</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="214"></th><th class="phabricator-source-line"><a data-n="214"></a></th><td class="phabricator-source-code">    <span class="n">jobname</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="215"></th><th class="phabricator-source-line"><a data-n="215"></a></th><td class="phabricator-source-code">    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">stdOutList</span><span class="p">[</span><span class="mi">2</span><span class="p">:]:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="216"></th><th class="phabricator-source-line"><a data-n="216"></a></th><td class="phabricator-source-code">        <span class="n">statusList</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="217"></th><th class="phabricator-source-line"><a data-n="217"></a></th><td class="phabricator-source-code">        <span class="k">if</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">statusList</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="218"></th><th class="phabricator-source-line"><a data-n="218"></a></th><td class="phabricator-source-code">            <span class="n">statusChar</span> <span class="o">=</span> <span class="n">statusList</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="219"></th><th class="phabricator-source-line"><a data-n="219"></a></th><td class="phabricator-source-code">            <span class="c"># SLURM has no &quot;Failed&quot; option that we parse?</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="220"></th><th class="phabricator-source-line"><a data-n="220"></a></th><td class="phabricator-source-code">            <span class="k">if</span><span class="p">(</span><span class="n">statusChar</span> <span class="o">==</span> <span class="s">&#039;R&#039;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="221"></th><th class="phabricator-source-line"><a data-n="221"></a></th><td class="phabricator-source-code">                <span class="n">status</span> <span class="o">=</span> <span class="s">&#039;RUNNING&#039;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="222"></th><th class="phabricator-source-line"><a data-n="222"></a></th><td class="phabricator-source-code">            <span class="k">elif</span><span class="p">(</span><span class="n">statusChar</span> <span class="o">==</span> <span class="s">&#039;F&#039;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="223"></th><th class="phabricator-source-line"><a data-n="223"></a></th><td class="phabricator-source-code">                <span class="n">status</span> <span class="o">=</span> <span class="s">&#039;FAILED&#039;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="224"></th><th class="phabricator-source-line"><a data-n="224"></a></th><td class="phabricator-source-code">            <span class="k">elif</span><span class="p">(</span><span class="n">statusChar</span> <span class="o">==</span> <span class="s">&#039;PD&#039;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="225"></th><th class="phabricator-source-line"><a data-n="225"></a></th><td class="phabricator-source-code">                <span class="n">status</span> <span class="o">=</span> <span class="s">&#039;PENDING&#039;</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="226"></th><th class="phabricator-source-line"><a data-n="226"></a></th><td class="phabricator-source-code">            <span class="k">else</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="227"></th><th class="phabricator-source-line"><a data-n="227"></a></th><td class="phabricator-source-code">                <span class="k">continue</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="228"></th><th class="phabricator-source-line"><a data-n="228"></a></th><td class="phabricator-source-code">            <span class="c"># Only add data to the dictionary if the line can be sucessfully parsed.</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="229"></th><th class="phabricator-source-line"><a data-n="229"></a></th><td class="phabricator-source-code">            <span class="c"># Skip cores for now</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="230"></th><th class="phabricator-source-line"><a data-n="230"></a></th><td class="phabricator-source-code">            <span class="n">queue</span> <span class="o">=</span> <span class="n">statusList</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="231"></th><th class="phabricator-source-line"><a data-n="231"></a></th><td class="phabricator-source-code">            <span class="n">username</span> <span class="o">=</span> <span class="n">statusList</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="232"></th><th class="phabricator-source-line"><a data-n="232"></a></th><td class="phabricator-source-code">            <span class="n">jobname</span> <span class="o">=</span> <span class="n">statusList</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="233"></th><th class="phabricator-source-line"><a data-n="233"></a></th><td class="phabricator-source-code">            <span class="n">statusDict</span><span class="p">[</span><span class="n">statusList</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="p">[</span><span class="n">status</span><span class="p">,</span> <span class="n">cores</span><span class="p">,</span> <span class="n">queue</span><span class="p">,</span> <span class="n">username</span><span class="p">,</span> <span class="n">jobname</span><span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="234"></th><th class="phabricator-source-line"><a data-n="234"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="235"></th><th class="phabricator-source-line"><a data-n="235"></a></th><td class="phabricator-source-code">    <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">GENERIC_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">statusDict</span><span class="p">))</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="236"></th><th class="phabricator-source-line"><a data-n="236"></a></th><td class="phabricator-source-code">    <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="237"></th><th class="phabricator-source-line"><a data-n="237"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="238"></th><th class="phabricator-source-line"><a data-n="238"></a></th><td class="phabricator-source-code"><span class="k">def</span> <span class="nf" data-symbol-name="_parseLoadCommand">_parseLoadCommand</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">,</span> <span class="n">defineRsmVariableFunc</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="239"></th><th class="phabricator-source-line"><a data-n="239"></a></th><td class="phabricator-source-code">    <span class="c"># Get the Standard Output</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="240"></th><th class="phabricator-source-line"><a data-n="240"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">GetStdOutVariable</span><span class="p">(</span><span class="n">environment</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="241"></th><th class="phabricator-source-line"><a data-n="241"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="242"></th><th class="phabricator-source-line"><a data-n="242"></a></th><td class="phabricator-source-code">    <span class="c"># Check to see if the output has the parse marker, if it does, then split the string and set the stdout equal to the half after the Marker String</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="243"></th><th class="phabricator-source-line"><a data-n="243"></a></th><td class="phabricator-source-code">    <span class="n">stdOut</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">ReduceStdOutBasedOnParseMarker</span><span class="p">(</span><span class="n">stdOut</span><span class="p">,</span> <span class="n">parseMarkerString</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="244"></th><th class="phabricator-source-line"><a data-n="244"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="245"></th><th class="phabricator-source-line"><a data-n="245"></a></th><td class="phabricator-source-code">    <span class="c"># StdoutList is comprised of the lines of stdout from after the parse Marker</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="246"></th><th class="phabricator-source-line"><a data-n="246"></a></th><td class="phabricator-source-code">    <span class="n">stdOutList</span> <span class="o">=</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">CreateListByNewlineAndRemoveBlankLines</span><span class="p">(</span><span class="n">stdOut</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="247"></th><th class="phabricator-source-line"><a data-n="247"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="248"></th><th class="phabricator-source-line"><a data-n="248"></a></th><td class="phabricator-source-code">    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">stdOutList</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="249"></th><th class="phabricator-source-line"><a data-n="249"></a></th><td class="phabricator-source-code">        <span class="n">generalUtilities</span><span class="o">.</span><span class="n">FailedToParseStdOut</span><span class="p">(</span><span class="s">&quot;getLoad&quot;</span><span class="p">,</span> <span class="n">stdOut</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="n">enablePrints</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="250"></th><th class="phabricator-source-line"><a data-n="250"></a></th><td class="phabricator-source-code">    
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="251"></th><th class="phabricator-source-line"><a data-n="251"></a></th><td class="phabricator-source-code">    <span class="n">loadDict</span> <span class="o">=</span> <span class="p">{}</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="252"></th><th class="phabricator-source-line"><a data-n="252"></a></th><td class="phabricator-source-code">    <span class="n">machineName</span> <span class="o">=</span> <span class="bp">None</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="253"></th><th class="phabricator-source-line"><a data-n="253"></a></th><td class="phabricator-source-code">    <span class="n">hostParameter</span> <span class="o">=</span> <span class="bp">False</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="254"></th><th class="phabricator-source-line"><a data-n="254"></a></th><td class="phabricator-source-code">    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">stdOutList</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="255"></th><th class="phabricator-source-line"><a data-n="255"></a></th><td class="phabricator-source-code">        <span class="c"># Skip the note at the bottom of the list</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="256"></th><th class="phabricator-source-line"><a data-n="256"></a></th><td class="phabricator-source-code">        <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&quot;  &quot;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="257"></th><th class="phabricator-source-line"><a data-n="257"></a></th><td class="phabricator-source-code">            <span class="n">hostParameter</span> <span class="o">=</span> <span class="bp">True</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="258"></th><th class="phabricator-source-line"><a data-n="258"></a></th><td class="phabricator-source-code">        <span class="k">else</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="259"></th><th class="phabricator-source-line"><a data-n="259"></a></th><td class="phabricator-source-code">            <span class="n">hostParameter</span> <span class="o">=</span> <span class="bp">False</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="260"></th><th class="phabricator-source-line"><a data-n="260"></a></th><td class="phabricator-source-code">            <span class="n">machineName</span> <span class="o">=</span> <span class="n">line</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="261"></th><th class="phabricator-source-line"><a data-n="261"></a></th><td class="phabricator-source-code">            <span class="n">state</span> <span class="o">=</span> <span class="bp">None</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="262"></th><th class="phabricator-source-line"><a data-n="262"></a></th><td class="phabricator-source-code">            <span class="n">freeCores</span> <span class="o">=</span> <span class="bp">None</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="263"></th><th class="phabricator-source-line"><a data-n="263"></a></th><td class="phabricator-source-code">            <span class="n">totalCores</span> <span class="o">=</span> <span class="bp">None</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="264"></th><th class="phabricator-source-line"><a data-n="264"></a></th><td class="phabricator-source-code">            <span class="k">continue</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="265"></th><th class="phabricator-source-line"><a data-n="265"></a></th><td class="phabricator-source-code">        
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="266"></th><th class="phabricator-source-line"><a data-n="266"></a></th><td class="phabricator-source-code">        <span class="k">if</span> <span class="n">hostParameter</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="267"></th><th class="phabricator-source-line"><a data-n="267"></a></th><td class="phabricator-source-code">            <span class="c"># If we see a node in a broken state, then we dont need to bother with the other parameters.  We will return 0,0</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="268"></th><th class="phabricator-source-line"><a data-n="268"></a></th><td class="phabricator-source-code">            <span class="k">if</span> <span class="n">state</span> <span class="o">!=</span> <span class="bp">None</span> <span class="ow">and</span> <span class="p">(</span><span class="s">&quot;offline&quot;</span> <span class="ow">in</span> <span class="n">state</span> <span class="ow">or</span> <span class="s">&quot;down&quot;</span> <span class="ow">in</span> <span class="n">state</span> <span class="ow">or</span> <span class="s">&quot;unknown&quot;</span> <span class="ow">in</span> <span class="n">state</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="269"></th><th class="phabricator-source-line"><a data-n="269"></a></th><td class="phabricator-source-code">                <span class="n">loadDict</span><span class="p">[</span><span class="n">machineName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="270"></th><th class="phabricator-source-line"><a data-n="270"></a></th><td class="phabricator-source-code">                
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="271"></th><th class="phabricator-source-line"><a data-n="271"></a></th><td class="phabricator-source-code">            <span class="c"># If all the important parameters are found, then update the dictionary.</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="272"></th><th class="phabricator-source-line"><a data-n="272"></a></th><td class="phabricator-source-code">            <span class="k">if</span> <span class="n">state</span> <span class="o">!=</span> <span class="bp">None</span> <span class="ow">and</span> <span class="n">freeCores</span> <span class="o">!=</span> <span class="bp">None</span> <span class="ow">and</span> <span class="n">totalCores</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="273"></th><th class="phabricator-source-line"><a data-n="273"></a></th><td class="phabricator-source-code">                <span class="k">if</span> <span class="ow">not</span> <span class="n">machineName</span> <span class="ow">in</span> <span class="n">loadDict</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="274"></th><th class="phabricator-source-line"><a data-n="274"></a></th><td class="phabricator-source-code">                    <span class="n">busyPercent</span> <span class="o">=</span> <span class="nb">int</span><span class="p">((</span><span class="n">totalCores</span> <span class="o">-</span> <span class="n">freeCores</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span> <span class="o">/</span> <span class="n">totalCores</span><span class="p">)</span> 
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="275"></th><th class="phabricator-source-line"><a data-n="275"></a></th><td class="phabricator-source-code">                    <span class="n">loadDict</span><span class="p">[</span><span class="n">machineName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span> <span class="n">busyPercent</span><span class="p">,</span> <span class="n">totalCores</span> <span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="276"></th><th class="phabricator-source-line"><a data-n="276"></a></th><td class="phabricator-source-code">                <span class="k">else</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="277"></th><th class="phabricator-source-line"><a data-n="277"></a></th><td class="phabricator-source-code">                    <span class="c"># if the loadDictionary already has this item, just skip lines until we get to the next host.</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="278"></th><th class="phabricator-source-line"><a data-n="278"></a></th><td class="phabricator-source-code">                    <span class="k">continue</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="279"></th><th class="phabricator-source-line"><a data-n="279"></a></th><td class="phabricator-source-code">            
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="280"></th><th class="phabricator-source-line"><a data-n="280"></a></th><td class="phabricator-source-code">            <span class="n">splitLine</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="281"></th><th class="phabricator-source-line"><a data-n="281"></a></th><td class="phabricator-source-code">            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">splitLine</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="282"></th><th class="phabricator-source-line"><a data-n="282"></a></th><td class="phabricator-source-code">                <span class="k">print</span> <span class="s">&quot;Invalid machineName parameter found on machineName &quot;</span> <span class="o">+</span> <span class="n">machineName</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">+</span> <span class="n">line</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="283"></th><th class="phabricator-source-line"><a data-n="283"></a></th><td class="phabricator-source-code">                <span class="k">continue</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="284"></th><th class="phabricator-source-line"><a data-n="284"></a></th><td class="phabricator-source-code">            <span class="k">if</span> <span class="n">splitLine</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&quot;state&quot;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="285"></th><th class="phabricator-source-line"><a data-n="285"></a></th><td class="phabricator-source-code">                <span class="n">state</span> <span class="o">=</span> <span class="n">splitLine</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="286"></th><th class="phabricator-source-line"><a data-n="286"></a></th><td class="phabricator-source-code">            <span class="k">elif</span> <span class="n">splitLine</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&quot;resources_available.ncpus&quot;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="287"></th><th class="phabricator-source-line"><a data-n="287"></a></th><td class="phabricator-source-code">                <span class="n">freeCores</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">splitLine</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="288"></th><th class="phabricator-source-line"><a data-n="288"></a></th><td class="phabricator-source-code">            <span class="k">elif</span> <span class="n">splitLine</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&quot;pcpus&quot;</span><span class="p">):</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="289"></th><th class="phabricator-source-line"><a data-n="289"></a></th><td class="phabricator-source-code">                <span class="n">totalCores</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">splitLine</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="290"></th><th class="phabricator-source-line"><a data-n="290"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="291"></th><th class="phabricator-source-line"><a data-n="291"></a></th><td class="phabricator-source-code">    <span class="n">defineRsmVariableFunc</span><span class="p">(</span><span class="n">GENERIC_OUTPUT_VARIABLE_NAME</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">loadDict</span><span class="p">))</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="292"></th><th class="phabricator-source-line"><a data-n="292"></a></th><td class="phabricator-source-code">    <span class="k">return</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="293"></th><th class="phabricator-source-line"><a data-n="293"></a></th><td class="phabricator-source-code">
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="294"></th><th class="phabricator-source-line"><a data-n="294"></a></th><td class="phabricator-source-code"><span class="k">try</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="295"></th><th class="phabricator-source-line"><a data-n="295"></a></th><td class="phabricator-source-code">    <span class="k">if</span> <span class="n">IsRunningIronPython</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="296"></th><th class="phabricator-source-line"><a data-n="296"></a></th><td class="phabricator-source-code">        <span class="n">exitCode</span> <span class="o">=</span> <span class="n">main</span><span class="p">(</span><span class="n">ipyArgv</span><span class="p">,</span> <span class="n">ipyEnviron</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="297"></th><th class="phabricator-source-line"><a data-n="297"></a></th><td class="phabricator-source-code">        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="n">exitCode</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="298"></th><th class="phabricator-source-line"><a data-n="298"></a></th><td class="phabricator-source-code">    <span class="k">else</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="299"></th><th class="phabricator-source-line"><a data-n="299"></a></th><td class="phabricator-source-code">        <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#039;__main__&#039;</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="300"></th><th class="phabricator-source-line"><a data-n="300"></a></th><td class="phabricator-source-code">            <span class="n">exitCode</span> <span class="o">=</span> <span class="n">main</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="301"></th><th class="phabricator-source-line"><a data-n="301"></a></th><td class="phabricator-source-code">            <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="n">exitCode</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="302"></th><th class="phabricator-source-line"><a data-n="302"></a></th><td class="phabricator-source-code"><span class="k">except</span> <span class="n">generalUtilities</span><span class="o">.</span><span class="n">NonZeroExitCodeException</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="303"></th><th class="phabricator-source-line"><a data-n="303"></a></th><td class="phabricator-source-code">    <span class="n">generalUtilities</span><span class="o">.</span><span class="n">customPrint</span><span class="p">(</span><span class="s">&quot;RSM_HPC_ERROR=&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="n">message</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="304"></th><th class="phabricator-source-line"><a data-n="304"></a></th><td class="phabricator-source-code">    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">exitCode</span><span class="p">)</span>
</td></tr><tr><th class="phabricator-source-blame-skip" data-blame="skip"></th><th class="phabricator-source-blame-info" data-blame="info" data-blame-lines="305"></th><th class="phabricator-source-line"><a data-n="305"></a></th><td class="phabricator-source-code">
</td></tr></table></div></div></div></div></div></div></div><div class="phabricator-standard-page-footer grouped"><span>c4science</span> Â· <a href="/w/c4science/">Help</a></div></div></div></div><script type="text/javascript" src="https://c4scdn.ch/res/defaultX/phabricator/66a62306/rsrc/js/core/behavior-line-linker.js"></script><script type="text/javascript" src="https://c4scdn.ch/res/defaultX/phabricator/4bde473b/core.pkg.js"></script><script type="text/javascript" src="https://c4scdn.ch/res/defaultX/phabricator/ef0b989b/differential.pkg.js"></script><script type="text/javascript" src="https://c4scdn.ch/res/defaultX/phabricator/3935d8c4/rsrc/js/application/files/behavior-document-engine.js"></script><data data-javelin-init-kind="merge" data-javelin-init-data="{&quot;block&quot;:0,&quot;data&quot;:[[],[],[],[],{&quot;uri&quot;:&quot;&quot;,&quot;symbols&quot;:{&quot;repositories&quot;:[&quot;PHID-REPO-czgmgesyvg76mddvli7k&quot;],&quot;lang&quot;:&quot;py&quot;,&quot;path&quot;:&quot;Modules\/Ansys\/RSM\/slurmParsing.py&quot;}},[],[],{&quot;viewportID&quot;:&quot;UQ0_0&quot;,&quot;viewKey&quot;:&quot;source&quot;,&quot;views&quot;:[{&quot;viewKey&quot;:&quot;source&quot;,&quot;icon&quot;:&quot;fa-code&quot;,&quot;color&quot;:null,&quot;name&quot;:&quot;View as Source&quot;,&quot;engineURI&quot;:&quot;\/source\/scitas-examples\/document\/master\/Modules\/Ansys\/RSM\/slurmParsing.py;bc49ac60f97ba6e468bb34e8f608350939fa6074?as=source&amp;filePHID=PHID-FILE-fnmmsrjfdf3pk3ayowhv&quot;,&quot;viewURI&quot;:&quot;\/source\/scitas-examples\/browse\/master\/Modules\/Ansys\/RSM\/slurmParsing.py;bc49ac60f97ba6e468bb34e8f608350939fa6074?as=source&quot;,&quot;loadingMarkup&quot;:&quot;\u003cdiv class=\&quot;document-engine-loading\&quot;\u003e\u003cspan class=\&quot;visual-only phui-icon-view phui-font-fa fa-gear ph-spin\&quot; data-meta=\&quot;0_0\&quot; aria-hidden=\&quot;true\&quot;\u003e\u003c\/span\u003eLoading...\u003c\/div\u003e&quot;,&quot;canEncode&quot;:true,&quot;canHighlight&quot;:true,&quot;canBlame&quot;:true},{&quot;viewKey&quot;:&quot;hexdump&quot;,&quot;icon&quot;:&quot;fa-microchip&quot;,&quot;color&quot;:null,&quot;name&quot;:&quot;View as Hexdump&quot;,&quot;engineURI&quot;:&quot;\/source\/scitas-examples\/document\/master\/Modules\/Ansys\/RSM\/slurmParsing.py;bc49ac60f97ba6e468bb34e8f608350939fa6074?as=hexdump&amp;filePHID=PHID-FILE-fnmmsrjfdf3pk3ayowhv&quot;,&quot;viewURI&quot;:&quot;\/source\/scitas-examples\/browse\/master\/Modules\/Ansys\/RSM\/slurmParsing.py;bc49ac60f97ba6e468bb34e8f608350939fa6074?as=hexdump&quot;,&quot;loadingMarkup&quot;:&quot;\u003cdiv class=\&quot;document-engine-loading\&quot;\u003e\u003cspan class=\&quot;visual-only phui-icon-view phui-font-fa fa-gear ph-spin\&quot; data-meta=\&quot;0_1\&quot; aria-hidden=\&quot;true\&quot;\u003e\u003c\/span\u003eLoading...\u003c\/div\u003e&quot;,&quot;canEncode&quot;:false,&quot;canHighlight&quot;:false,&quot;canBlame&quot;:false},{&quot;viewKey&quot;:&quot;remarkup&quot;,&quot;icon&quot;:&quot;fa-file-text-o&quot;,&quot;color&quot;:null,&quot;name&quot;:&quot;View as Remarkup&quot;,&quot;engineURI&quot;:&quot;\/source\/scitas-examples\/document\/master\/Modules\/Ansys\/RSM\/slurmParsing.py;bc49ac60f97ba6e468bb34e8f608350939fa6074?as=remarkup&amp;filePHID=PHID-FILE-fnmmsrjfdf3pk3ayowhv&quot;,&quot;viewURI&quot;:&quot;\/source\/scitas-examples\/browse\/master\/Modules\/Ansys\/RSM\/slurmParsing.py;bc49ac60f97ba6e468bb34e8f608350939fa6074?as=remarkup&quot;,&quot;loadingMarkup&quot;:&quot;\u003cdiv class=\&quot;document-engine-loading\&quot;\u003e\u003cspan class=\&quot;visual-only phui-icon-view phui-font-fa fa-gear ph-spin\&quot; data-meta=\&quot;0_2\&quot; aria-hidden=\&quot;true\&quot;\u003e\u003c\/span\u003eLoading...\u003c\/div\u003e&quot;,&quot;canEncode&quot;:false,&quot;canHighlight&quot;:false,&quot;canBlame&quot;:false},{&quot;viewKey&quot;:&quot;json&quot;,&quot;icon&quot;:&quot;fa-database&quot;,&quot;color&quot;:null,&quot;name&quot;:&quot;View as JSON&quot;,&quot;engineURI&quot;:&quot;\/source\/scitas-examples\/document\/master\/Modules\/Ansys\/RSM\/slurmParsing.py;bc49ac60f97ba6e468bb34e8f608350939fa6074?as=json&amp;filePHID=PHID-FILE-fnmmsrjfdf3pk3ayowhv&quot;,&quot;viewURI&quot;:&quot;\/source\/scitas-examples\/browse\/master\/Modules\/Ansys\/RSM\/slurmParsing.py;bc49ac60f97ba6e468bb34e8f608350939fa6074?as=json&quot;,&quot;loadingMarkup&quot;:&quot;\u003cdiv class=\&quot;document-engine-loading\&quot;\u003e\u003cspan class=\&quot;visual-only phui-icon-view phui-font-fa fa-gear ph-spin\&quot; data-meta=\&quot;0_3\&quot; aria-hidden=\&quot;true\&quot;\u003e\u003c\/span\u003eLoading...\u003c\/div\u003e&quot;,&quot;canEncode&quot;:true,&quot;canHighlight&quot;:false,&quot;canBlame&quot;:false}],&quot;encode&quot;:{&quot;icon&quot;:&quot;fa-font&quot;,&quot;name&quot;:&quot;Change Text Encoding...&quot;,&quot;uri&quot;:&quot;\/services\/encoding\/&quot;,&quot;value&quot;:null},&quot;highlight&quot;:{&quot;icon&quot;:&quot;fa-lightbulb-o&quot;,&quot;name&quot;:&quot;Highlight As...&quot;,&quot;uri&quot;:&quot;\/services\/highlight\/&quot;,&quot;value&quot;:null},&quot;blame&quot;:{&quot;icon&quot;:&quot;fa-backward&quot;,&quot;hide&quot;:&quot;Hide Blame&quot;,&quot;show&quot;:&quot;Show Blame&quot;,&quot;uri&quot;:&quot;\/source\/scitas-examples\/blame\/master\/Modules\/Ansys\/RSM\/slurmParsing.py;bc49ac60f97ba6e468bb34e8f608350939fa6074&quot;,&quot;enabled&quot;:true,&quot;value&quot;:null},&quot;coverage&quot;:{&quot;labels&quot;:[{&quot;C&quot;:&quot;Covered&quot;,&quot;U&quot;:&quot;Not Covered&quot;,&quot;N&quot;:&quot;Not Executable&quot;,&quot;X&quot;:&quot;Not Reachable&quot;}]}},[],[],[],[],[],[],[],[],{&quot;map&quot;:{&quot;UQ0_2&quot;:&quot;phabricator-search-menu-expanded&quot;,&quot;UQ0_3&quot;:&quot;menu-icon-selected&quot;}},{&quot;items&quot;:[{&quot;name&quot;:&quot;Search&quot;},{&quot;icon&quot;:&quot;fa-globe&quot;,&quot;name&quot;:&quot;All Documents&quot;,&quot;value&quot;:&quot;all&quot;},{&quot;icon&quot;:&quot;fa-code&quot;,&quot;name&quot;:&quot;Current Application&quot;,&quot;value&quot;:&quot;application&quot;},{&quot;name&quot;:&quot;Saved Queries&quot;},{&quot;icon&quot;:&quot;fa-certificate&quot;,&quot;name&quot;:&quot;Open Documents&quot;,&quot;value&quot;:&quot;open&quot;},{&quot;icon&quot;:&quot;fa-certificate&quot;,&quot;name&quot;:&quot;Open Tasks&quot;,&quot;value&quot;:&quot;open-tasks&quot;},{&quot;name&quot;:&quot;More Options&quot;},{&quot;icon&quot;:&quot;fa-search-plus&quot;,&quot;name&quot;:&quot;Advanced Search&quot;,&quot;href&quot;:&quot;\/search\/query\/advanced\/&quot;},{&quot;icon&quot;:&quot;fa-book&quot;,&quot;name&quot;:&quot;User Guide: Search&quot;,&quot;href&quot;:&quot;https:\/\/secure.phabricator.com\/diviner\/find\/?name=Search+User+Guide&amp;type=article&amp;jump=1&quot;}],&quot;icon&quot;:&quot;fa-globe&quot;,&quot;value&quot;:&quot;all&quot;},[],[],[],[]]}"></data><data data-javelin-init-kind="behaviors" data-javelin-init-data="{&quot;refresh-csrf&quot;:[{&quot;tokenName&quot;:&quot;__csrf__&quot;,&quot;header&quot;:&quot;X-Phabricator-Csrf&quot;,&quot;viaHeader&quot;:&quot;X-Phabricator-Via&quot;,&quot;current&quot;:&quot;B@hhzis7uz8e3110b7c71473d8&quot;}],&quot;history-install&quot;:[]}"></data><data data-javelin-init-kind="behaviors" data-javelin-init-data="{&quot;phabricator-line-linker&quot;:[],&quot;repository-crossreference&quot;:[],&quot;document-engine&quot;:[{&quot;controlID&quot;:&quot;UQ0_1&quot;,&quot;next&quot;:&quot;blame&quot;}],&quot;workflow&quot;:[],&quot;lightbox-attachments&quot;:[],&quot;aphront-form-disable-on-submit&quot;:[],&quot;toggle-class&quot;:[],&quot;phabricator-gesture&quot;:[],&quot;device&quot;:[],&quot;high-security-warning&quot;:[{&quot;show&quot;:false,&quot;uri&quot;:&quot;\/auth\/session\/downgrade\/&quot;,&quot;message&quot;:&quot;Your session is in high security mode. When you finish using it, click here to leave.&quot;}],&quot;phabricator-keyboard-shortcuts&quot;:[{&quot;helpURI&quot;:&quot;\/help\/keyboardshortcut\/&quot;,&quot;searchID&quot;:&quot;UQ0_4&quot;,&quot;pht&quot;:{&quot;\/&quot;:&quot;Give keyboard focus to the search box.&quot;,&quot;?&quot;:&quot;Show keyboard shortcut help for the current page.&quot;}}],&quot;phabricator-search-typeahead&quot;:[{&quot;id&quot;:&quot;UQ0_5&quot;,&quot;input&quot;:&quot;UQ0_4&quot;,&quot;button&quot;:&quot;UQ0_6&quot;,&quot;selectorID&quot;:&quot;UQ0_7&quot;,&quot;applicationID&quot;:&quot;UQ0_8&quot;,&quot;defaultApplicationIcon&quot;:&quot;fa-dot-circle-o&quot;,&quot;appScope&quot;:&quot;application&quot;,&quot;src&quot;:&quot;\/typeahead\/class\/PhabricatorSearchDatasource\/&quot;,&quot;limit&quot;:10,&quot;placeholder&quot;:&quot;Search&quot;,&quot;scopeUpdateURI&quot;:&quot;\/settings\/adjust\/?key=search-scope&quot;}],&quot;quicksand-blacklist&quot;:[{&quot;patterns&quot;:[&quot;\/phame\/live\/.*&quot;,&quot;\/conpherence\/.*&quot;,&quot;\/Z\\d+&quot;,&quot;\/file\/(data|download)\/.*&quot;,&quot;\/phortune\/.*&quot;,&quot;\/auth\/.*&quot;]}]}"></data></body></html>